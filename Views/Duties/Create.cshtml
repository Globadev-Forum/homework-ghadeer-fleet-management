@model FleetManagement.Models.DutyViewModel

@{
    ViewBag.Title = "New Duty";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string successmessage;
    string errormessage;

    if (TempData["successmessage"] == null)
    { successmessage = ""; }

    else
    { successmessage = TempData["successmessage"].ToString(); }


    if (TempData["errormessage"] == null)
    { errormessage = ""; }
    else
    { errormessage = TempData["errormessage"].ToString(); }

}

@if (!string.IsNullOrWhiteSpace(successmessage))
{
    <div class="alert alert-sucess" style="font-size:15px; color: forestgreen">
        <strong></strong>@successmessage

    </div>

}
else if (!string.IsNullOrWhiteSpace(errormessage))
{
    <div class="alert alert-danger" style="font-size:15px; ">
        <strong>Error!</strong>@errormessage
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert"></button>
    </div>


}

<h2>@ViewBag.title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.V_DriversVM.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownList("DriverId", null, null, htmlAttributes: new { @class = "form-control" })
               @Html.ValidationMessageFor(model => model.DriverId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="multiline">
                @Html.TextAreaFor(model => model.Desc, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
}

<div>

</div>
