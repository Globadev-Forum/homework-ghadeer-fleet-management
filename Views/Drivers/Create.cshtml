@model FleetManagement.Models.DriverViewModel

@{
    ViewBag.Title = "New Driver";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string successmessage;
    string errormessage;

    if (TempData["successmessage"] == null)
    { successmessage = ""; }

    else
    { successmessage = TempData["successmessage"].ToString(); }


    if (TempData["errormessage"] == null)
    { errormessage = ""; }
    else
    { errormessage = TempData["errormessage"].ToString(); }

}

@if (!string.IsNullOrWhiteSpace(successmessage))
{
    <div class="alert alert-sucess">
        <strong></strong>@successmessage

    </div>

}
else if (!string.IsNullOrWhiteSpace(errormessage))
{
    <div class="alert alert-danger">
        <strong>Error!</strong>@errormessage
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert"></button>
    </div>

}
<h2>@ViewBag.Title</h2>
<form action="Create" method="post" autocomplete="off">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>


    }
</form>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

